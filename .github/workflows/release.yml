#publish your docker image to Docker github container registry
name: publish
on: [push]
env:
  REGISTRY: ghcr.io
  ACTOR: miranlfk
  IMAGE_NAME: release-app

jobs:
  publish-Ballerina-docker-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Login to Github Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${ secrets.GITHUB_TOKEN }}

      - name: Build the Ballerina Docker image
        run: |

          docker build --no-cache=true . --tag ${{ env.REGISTRY }}/${{ env.ACTOR }}/${{ env.IMAGE_NAME }}:v${{ github.run_number }}
          docker run ${{ env.REGISTRY }}/${{ env.ACTOR }}/${{ env.IMAGE_NAME }}:v${{ github.run_number }}
          docker push ${{ env.REGISTRY }}/${{ env.ACTOR }}/${{ env.IMAGE_NAME }}:v${{ github.run_number }}
      
      - name: cosign-installer
        uses: sigstore/cosign-installer@v3.0.3
          
      - name: Sign the published Docker image
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: cosign sign ${{ env.REGISTRY }}/${{ env.ACTOR }}/${{ env.IMAGE_NAME }}:v${{ github.run_number }}

      - name: Archive site content
        uses: thedoctor0/zip-release@master
        with:
          filename: Ballerina.zip

      - name: Create GitHub release
        id: new-test-release-cosign
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }}

      - name: Upload asset to GitHub release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.new-test-release-cosign.outputs.upload_url }}
          asset_path: ./Ballerina.zip
          asset_name: Ballerina-v${{ github.run_number }}.zip
          asset_content_type: application/zip

      - name: cosign-installer
        uses: sigstore/cosign-installer@v3.0.3

      - name: Sign the Release Artifact
        id: sign-display-output
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: |
          echo 'y' | cosign sign-blob Ballerina.zip --bundle Ballerina.bundle 
          
      - name: Verify the Release Artifact
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: |
          cosign verify-blob Ballerina.zip --bundle Ballerina.bundle --certificate-identity=https://github.com/Miranlfk/release-app/.github/workflows/release.yml@refs/heads/change-sign --certificate-oidc-issuer=https://token.actions.githubusercontent.com
    
      - name: Create Verify Text File
        run: 'echo "cosign verify-blob Ballerina.zip --bundle Ballerina.bundle --certificate-identity=https://github.com/Miranlfk/release-app/.github/workflows/release.yml@refs/heads/change-sign --certificate-oidc-issuer=https://token.actions.githubusercontent.com" > verify.txt'
        
      - name: Upload Signature to GitHub release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.new-test-release-cosign.outputs.upload_url }}
          asset_path: ./verify.txt
          asset_name: verify-Ballerina.txt
          asset_content_type: application/octet-stream
          
      - name: Upload Certifacte to GitHub release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.new-test-release-cosign.outputs.upload_url }}
          asset_path: ./Ballerina.bundle
          asset_name: Ballerina.bundle
          asset_content_type: application/octet-stream
